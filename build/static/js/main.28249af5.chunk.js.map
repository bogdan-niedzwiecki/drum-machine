{"version":3,"sources":["Components/Pad/Pad.jsx","Components/Preset/Preset.jsx","Components/Power/Power.jsx","Components/Volume/Volume.jsx","presets.js","App.jsx","serviceWorker.js","index.js"],"names":["Pad","props","handleKeydown","event","key","toLowerCase","btn","setState","pressed","playFromBeggining","power","handleKeyup","audio","Audio","url","state","this","volume","pause","currentTime","play","onClick","document","addEventListener","removeEventListener","padClass","classNames","className","Component","Preset","handleKeypress","onChange","type","name","id","checked","preset","htmlFor","Power","Volume","handleArrowKeyDown","keyCode","volumeUp","volumeDown","step","min","max","onKeyDown","e","preventDefault","value","presetOne","presetTwo","App","display","map","pad","parseFloat","target","toFixed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.28249af5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\n\nclass Pad extends Component {\n  constructor(props) {\n    super(props);\n    this.audio = new Audio(this.props.url);\n    this.state = { pressed: false };\n  }\n\n  handleKeydown = event => {\n    if (event.key.toLowerCase() === this.props.btn) {\n      this.setState({ pressed: true }, this.playFromBeggining(this.props.power))\n    }\n  };\n\n  handleKeyup = event => {\n    if (event.key.toLowerCase() === this.props.btn) {\n      this.setState({ pressed: false })\n    }\n  };\n\n  playFromBeggining(power = true) {\n    if (power) {\n      this.audio.volume = this.props.volume;\n      this.audio.pause();\n      this.audio.currentTime = 0;\n      this.audio.play();\n    }\n    this.props.onClick()\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeydown);\n    document.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeydown);\n    document.removeEventListener(\"keyup\", this.handleKeyup);\n  }\n\n  render() {\n    let padClass = classNames(this.props.className, {\n      'drummachine__pad--pressed': this.state.pressed\n    });\n    return (\n      <div className={padClass} onClick={() => { this.playFromBeggining(this.props.power) }}>\n        <p>{this.props.btn}</p>\n      </div>\n    );\n  }\n\n}\n\nexport default Pad;\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\n\nclass Preset extends Component {\n \n  componentDidMount() {\n    document.addEventListener('keypress', this.handleKeypress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  handleKeypress = event => {\n    if (event.key.toLowerCase() === this.props.btn) {\n      this.props.onChange()\n    }\n  };\n\n  render() {\n    let padClass = classNames(this.props.className);\n    return (\n      <div>\n        <input type=\"checkbox\"\n          name=\"preset\"\n          id=\"preset\"\n          checked={this.props.preset}\n          onChange={this.props.onChange} />\n        <label htmlFor=\"preset\" className={padClass} ><p>{this.props.btn}</p></label>\n      </div>\n    );\n  }\n\n}\n\nexport default Preset;\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\n\nclass Power extends Component {\n \n  componentDidMount() {\n    document.addEventListener('keypress', this.handleKeypress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  handleKeypress = event => {\n    if (event.key.toLowerCase() === this.props.btn) {\n      this.props.onChange()\n    }\n  };\n\n  render() {\n    let padClass = classNames(this.props.className);\n    return (\n      <div>\n        <input type=\"checkbox\"\n          name=\"power\"\n          id=\"power\"\n          checked={this.props.power}\n          onChange={this.props.onChange} />\n        <label htmlFor=\"power\" className={padClass} ><p>{this.props.btn}</p></label>\n      </div>\n    );\n  }\n\n}\n\nexport default Power;\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\n\nclass Volume extends Component {\n\n  handleArrowKeyDown = event => {\n    if (event.keyCode === 38 || event.keyCode === 39) {\n      this.props.volumeUp()\n    }\n    if (event.keyCode === 37 || event.keyCode === 40) {\n      this.props.volumeDown()\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleArrowKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleArrowKeyDown);\n  }\n\n  render() {\n    let padClass = classNames(this.props.className);\n    return (\n      <div className={padClass}>\n        <input\n          id=\"typeinp\"\n          type=\"range\"\n          step=\"0.05\"\n          min=\"0\" max=\"1\"\n          onKeyDown={e => e.preventDefault()}\n          value={this.props.volume}\n          onChange={this.props.onChange} />\n      </div>\n    );\n  }\n\n}\n\nexport default Volume;\n","export const presetOne = [{\r\n  btn: 'q',\r\n  id: 'Heater-1',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\r\n}, {\r\n  btn: 'w',\r\n  id: 'Heater-2',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\r\n}, {\r\n  btn: 'e',\r\n  id: 'Heater-3',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\r\n}, {\r\n  btn: 'a',\r\n  id: 'Heater-4',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\r\n}, {\r\n  btn: 's',\r\n  id: 'Clap',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\r\n}, {\r\n  btn: 'd',\r\n  id: 'Open-HH',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\r\n}, {\r\n  btn: 'z',\r\n  id: \"Kick-n'-Hat\",\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\r\n}, {\r\n  btn: 'x',\r\n  id: 'Kick',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\r\n}, {\r\n  btn: 'c',\r\n  id: 'Closed-HH',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\r\n},\r\n];\r\n\r\nexport const presetTwo = [{\r\n  btn: 'q',\r\n  id: 'Chord-1',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\r\n}, {\r\n  btn: 'w',\r\n  id: 'Chord-2',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\r\n}, {\r\n  btn: 'e',\r\n  id: 'Chord-3',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\r\n}, {\r\n  btn: 'a',\r\n  id: 'Shaker',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\r\n}, {\r\n  btn: 's',\r\n  id: 'Open-HH',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\r\n}, {\r\n  btn: 'd',\r\n  id: 'Closed-HH',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\r\n}, {\r\n  btn: 'z',\r\n  id: 'Punchy-Kick',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\r\n}, {\r\n  btn: 'x',\r\n  id: 'Side-Stick',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\r\n}, {\r\n  btn: 'c',\r\n  id: 'Snare',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\r\n}];","import React, { Component } from 'react';\nimport Pad from './Components/Pad/Pad';\nimport Preset from './Components/Preset/Preset';\nimport Power from './Components/Power/Power';\nimport Volume from './Components/Volume/Volume';\nimport './App.scss';\nimport { presetOne, presetTwo } from './presets'\n\nclass App extends Component {\n  state = {\n    preset: false,\n    power: true,\n    display: '',\n    volume: 0.75\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>Drum Machine</h1>\n        <div className=\"drummachine\">\n          <div className=\"drummachine__drumpad\">\n            {this.state.preset ? presetOne.map(pad =>\n              <Pad className=\"drummachine__pad\"\n                key={pad.id}\n                url={pad.url}\n                btn={pad.btn}\n                power={this.state.power}\n                volume={this.state.volume}\n                onClick={() => this.state.power ? this.setState({ display: pad.id }) : null} />)\n              : presetTwo.map(pad =>\n                <Pad className=\"drummachine__pad\"\n                  key={pad.id}\n                  url={pad.url}\n                  btn={pad.btn}\n                  power={this.state.power}\n                  volume={this.state.volume}\n                  onClick={() => this.state.power ? this.setState({ display: pad.id }) : null} />)}\n          </div>\n          <div className=\"drummachine__controlpanel\">\n            <div className=\"drummachine__display\"><p>{this.state.display || (this.state.power ? 'Power On' : 'Power Off')}</p></div>\n            <Power btn={'p'}\n              className=\"drummachine__pad\"\n              power={this.state.power}\n              onChange={() => this.setState(state => ({ power: !state.power, display: state.power ? 'Power Off' : 'Power On' }))} />\n            <Preset btn={'['}\n              className=\"drummachine__pad\"\n              preset={this.state.preset}\n              onChange={() => this.setState(state => ({ preset: !state.preset, display: state.power ? (state.preset ? 'Preset Two' : 'Preset One') : 'Power Off' }))} />\n            <Volume className=\"drummachine__volume\"\n              volume={this.state.volume}\n              onChange={event => this.setState({ volume: parseFloat(event.target.value), display: this.state.power ? `Volume: ${(parseFloat(event.target.value)* 100).toFixed()}%` : 'Power Off' })}\n              volumeUp={() => this.setState(state => state.volume < 1 ? { volume: parseFloat((state.volume + 0.05).toFixed(2)), display: state.power ? `Volume: ${parseFloat((state.volume + 0.05) * 100).toFixed()}%` : 'Power Off' } : null)}\n              volumeDown={() => this.setState(state => state.volume > 0 ? { volume: parseFloat((state.volume - 0.05).toFixed(2)), display: state.power ? `Volume: ${parseFloat((state.volume - 0.05) * 100).toFixed()}%` : 'Power Off' } : null)} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<React.StrictMode>\n    <App />\n</React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}